{"version":3,"file":"static/js/121.4f1cf07c.chunk.js","mappings":"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","sources":["../node_modules/@mdxeditor/editor/dist/CodeBlockEditor-61d04ccd.js","../node_modules/@mdxeditor/editor/dist/useCodeMirrorRef-a3ac5f25.js"],"sourcesContent":["import { SandpackProvider, CodeEditor } from \"@codesandbox/sandpack-react\";\nimport React__default from \"react\";\nimport { u as useEmitterValues, a as usePublisher, s as styles } from \"./index-2fb34a7e.js\";\nimport { u as useCodeMirrorRef } from \"./useCodeMirrorRef-a3ac5f25.js\";\nimport \"@lexical/react/LexicalComposer\";\nimport \"@lexical/react/LexicalContentEditable\";\nimport \"@lexical/react/LexicalErrorBoundary\";\nimport \"@lexical/react/LexicalHorizontalRulePlugin\";\nimport \"@lexical/react/LexicalLinkPlugin\";\nimport \"@lexical/react/LexicalListPlugin\";\nimport \"@lexical/react/LexicalRichTextPlugin\";\nimport \"@lexical/react/LexicalTabIndentationPlugin\";\nimport \"classnames\";\nimport \"lexical\";\nimport \"@lexical/code\";\nimport \"@lexical/link\";\nimport \"@lexical/list\";\nimport \"@lexical/react/LexicalHorizontalRuleNode\";\nimport \"@lexical/rich-text\";\nimport \"mdast-util-directive\";\nimport \"mdast-util-from-markdown\";\nimport \"mdast-util-frontmatter\";\nimport \"mdast-util-gfm-table\";\nimport \"mdast-util-mdx\";\nimport \"micromark-extension-directive\";\nimport \"micromark-extension-frontmatter\";\nimport \"micromark-extension-gfm-table\";\nimport \"micromark-extension-mdxjs\";\nimport \"@lexical/utils\";\nimport \"@lexical/react/LexicalComposerContext\";\nimport \"@lexical/selection\";\nimport \"@lexical/react/LexicalHistoryPlugin\";\nimport \"mdast-util-to-markdown\";\nimport \"@radix-ui/react-popover\";\nimport \"@radix-ui/react-tooltip\";\nimport \"downshift\";\nimport \"@lexical/markdown\";\nimport \"@lexical/react/LexicalMarkdownShortcutPlugin\";\nimport \"react-diff-view\";\nimport \"unidiff\";\nimport \"@radix-ui/react-toolbar\";\nimport \"@radix-ui/react-select\";\nimport \"@radix-ui/react-dialog\";\nconst CodeBlockEditor = ({ nodeKey, code, language, onChange, focusEmitter }) => {\n  const [activeEditor] = useEmitterValues(\"activeEditor\");\n  const codeMirrorRef = useCodeMirrorRef(nodeKey, \"codeblock\", language);\n  const setActiveEditorType = usePublisher(\"activeEditorType\");\n  React__default.useEffect(() => {\n    focusEmitter.subscribe(() => {\n      var _a, _b;\n      (_b = (_a = codeMirrorRef == null ? void 0 : codeMirrorRef.current) == null ? void 0 : _a.getCodemirror()) == null ? void 0 : _b.focus();\n      setActiveEditorType({ type: \"codeblock\", nodeKey });\n    });\n  }, [focusEmitter, codeMirrorRef, setActiveEditorType, nodeKey]);\n  const wrappedOnChange = React__default.useCallback(\n    (code2) => {\n      activeEditor == null ? void 0 : activeEditor.update(() => {\n        onChange(code2);\n      });\n    },\n    [onChange, activeEditor]\n  );\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: styles.sandpackWrapper }, /* @__PURE__ */ React__default.createElement(SandpackProvider, null, /* @__PURE__ */ React__default.createElement(\n    CodeEditor,\n    {\n      showLineNumbers: true,\n      initMode: \"immediate\",\n      key: language,\n      filePath: `file.${language || \"txt\"}`,\n      code,\n      onCodeUpdate: wrappedOnChange,\n      ref: codeMirrorRef\n    }\n  )));\n};\nexport {\n  CodeBlockEditor\n};\n","import { $getNodeByKey, $createParagraphNode } from \"lexical\";\nimport React__default from \"react\";\nimport { u as useEmitterValues, a as usePublisher } from \"./index-2fb34a7e.js\";\nfunction useCodeMirrorRef(nodeKey, editorType, language) {\n  const [activeEditor] = useEmitterValues(\"activeEditor\");\n  const setActiveEditorType = usePublisher(\"activeEditorType\");\n  const codeMirrorRef = React__default.useRef(null);\n  const atBottom = React__default.useRef(false);\n  const atTop = React__default.useRef(false);\n  const onFocusHandler = React__default.useCallback(() => {\n    setActiveEditorType({ type: editorType, nodeKey });\n  }, [nodeKey, setActiveEditorType, editorType]);\n  const onKeyDownHandler = React__default.useCallback(\n    (e) => {\n      var _a, _b, _c, _d;\n      if (e.key === \"ArrowDown\") {\n        const state = (_b = (_a = codeMirrorRef == null ? void 0 : codeMirrorRef.current) == null ? void 0 : _a.getCodemirror()) == null ? void 0 : _b.state;\n        if (state) {\n          const docLength = state.doc.length;\n          const selectionEnd = state.selection.ranges[0].to;\n          if (docLength === selectionEnd) {\n            if (!atBottom.current) {\n              atBottom.current = true;\n            } else {\n              activeEditor == null ? void 0 : activeEditor.update(() => {\n                var _a2, _b2;\n                const node = $getNodeByKey(nodeKey);\n                const nextSibling = node.getNextSibling();\n                if (nextSibling) {\n                  (_b2 = (_a2 = codeMirrorRef == null ? void 0 : codeMirrorRef.current) == null ? void 0 : _a2.getCodemirror()) == null ? void 0 : _b2.contentDOM.blur();\n                  node.selectNext();\n                } else {\n                  node.insertAfter($createParagraphNode());\n                }\n              });\n              atBottom.current = false;\n            }\n          }\n        }\n      } else if (e.key === \"ArrowUp\") {\n        const state = (_d = (_c = codeMirrorRef == null ? void 0 : codeMirrorRef.current) == null ? void 0 : _c.getCodemirror()) == null ? void 0 : _d.state;\n        if (state) {\n          const selectionStart = state.selection.ranges[0].from;\n          if (selectionStart === 0) {\n            if (!atTop.current) {\n              atTop.current = true;\n            } else {\n              activeEditor == null ? void 0 : activeEditor.update(() => {\n                var _a2, _b2;\n                const node = $getNodeByKey(nodeKey);\n                const previousSibling = node.getPreviousSibling();\n                if (previousSibling) {\n                  (_b2 = (_a2 = codeMirrorRef == null ? void 0 : codeMirrorRef.current) == null ? void 0 : _a2.getCodemirror()) == null ? void 0 : _b2.contentDOM.blur();\n                  node.selectPrevious();\n                }\n              });\n              atTop.current = false;\n            }\n          }\n        }\n      } else if (e.key === \"Enter\") {\n        e.stopPropagation();\n      }\n    },\n    [activeEditor, nodeKey]\n  );\n  React__default.useEffect(() => {\n    const codeMirror = codeMirrorRef.current;\n    setTimeout(() => {\n      var _a, _b, _c, _d;\n      (_b = (_a = codeMirror == null ? void 0 : codeMirror.getCodemirror()) == null ? void 0 : _a.contentDOM) == null ? void 0 : _b.addEventListener(\"focus\", onFocusHandler);\n      (_d = (_c = codeMirror == null ? void 0 : codeMirror.getCodemirror()) == null ? void 0 : _c.contentDOM) == null ? void 0 : _d.addEventListener(\"keydown\", onKeyDownHandler);\n    }, 100);\n    return () => {\n      var _a, _b;\n      (_a = codeMirror == null ? void 0 : codeMirror.getCodemirror()) == null ? void 0 : _a.contentDOM.removeEventListener(\"focus\", onFocusHandler);\n      (_b = codeMirror == null ? void 0 : codeMirror.getCodemirror()) == null ? void 0 : _b.contentDOM.removeEventListener(\"keydown\", onKeyDownHandler);\n    };\n  }, [codeMirrorRef, onFocusHandler, onKeyDownHandler, language]);\n  return codeMirrorRef;\n}\nexport {\n  useCodeMirrorRef as u\n};\n"],"names":["CodeBlockEditor","_ref","nodeKey","code","language","onChange","focusEmitter","_useEmitterValues","useEmitterValues","activeEditor","_slicedToArray","codeMirrorRef","useCodeMirrorRef","setActiveEditorType","usePublisher","React__default","subscribe","_a","_b","current","getCodemirror","focus","type","wrappedOnChange","code2","update","className","styles","sandpackWrapper","SandpackProvider","CodeEditor","showLineNumbers","initMode","key","filePath","concat","onCodeUpdate","ref","editorType","atBottom","atTop","onFocusHandler","onKeyDownHandler","e","_c","_d","state","doc","length","selection","ranges","to","_a2","_b2","node","$getNodeByKey","getNextSibling","contentDOM","blur","selectNext","insertAfter","$createParagraphNode","from","getPreviousSibling","selectPrevious","stopPropagation","codeMirror","setTimeout","addEventListener","removeEventListener"],"sourceRoot":""}