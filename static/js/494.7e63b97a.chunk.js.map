{"version":3,"file":"static/js/494.7e63b97a.chunk.js","mappings":"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,GACV,MAAyB,aAAlBA,EAAKq0B,QAChB,EACAguB,mBAAkB,SAACriD,GACf,MAAyB,kBAAlBA,EAAKq0B,QAChB,EACAiuB,cAAa,SAACtiD,GACV,OAAOrD,OAAOC,UAAUC,eAAeS,KAAK0C,EAAM,UACtD,EAEAuiD,0BAAyB,SAACviD,EAAM00B,GAC5B10B,EAAKo1B,mBAAqBV,CAC9B,EACA8tB,0BAAyB,SAACxiD,GACtB,OAAOA,EAAKo1B,kBAChB,EACAqtB,6BAA4B,SAACziD,EAAM0iD,GAC/B1iD,EAAKo1B,oBAAkBptB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQhI,EAAKo1B,oBAAuBstB,EAC/D,GCzKEC,GAAqB,OACrBC,GAAkB,sBAClBC,GAAwB,6DACxBC,GAAiC,CACnC,6CACA,6CACA,uDACA,kCACA,kCACA,yCACA,yCACA,iCACA,0BACA,2BACA,0BACA,gCACA,0BACA,wBACA,8BACA,8BACA,8BACA,8BACA,qCACA,qCACA,qCACA,qCACA,6BACA,sBACA,2CACA,wDACA,iDACA,mDACA,wDACA,iDACA,mDACA,sCACA,6CACA,6CACA,sDACA,8DACA,8CACA,iFACA,wEACA,uCACA,gDACA,uDACA,kCACA,+BACA,+BACA,yBACA,gCACA,kCACA,sCACA,2CACA,yCACA,wBACA,4BACA,sCACA,mCAEEC,GAA8C,GAAHlpD,OAC1CipD,GAA8B,CACjC,mCACA,yCAEEE,GAAyB,IAAI3nD,IAAI,CACnC,uCACA,qCACA,SAEE4nD,GAAoC,CAAC,mCAAoC,wCACzEC,GAAmD,GAAHrpD,OAC/CopD,GAAiC,CACpC,mCACA,yCAGJ,SAASE,GAAU1sB,EAAU2sB,GACzB,OAAOA,EAASC,MAAK,SAACziC,GAAM,OAAK6V,EAASuC,WAAWpY,EAAO,GAChE,CC/EA,IAAM0iC,GAAa,CACfC,UAAW,YACXC,gBAAiB,yBAGfC,GAAsB,gBACtBC,GAA+B,gBAC/BC,GAA2B,IAAI1rD,IAAI,CACrC,gBACA,gBACA,gBACA,cACA,WACA,gBACA,kBACA,WACA,cACA,WACA,o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AAO,CAAC,SACRC,MAAO,CAAC,SACRC,MAAO,CAAC,SACRC,GAAI,CAAC,SACLC,GAAI,CAAC,SACLC,GAAI,CAAC,UAEPC,UAAW,CACT74D,KAAM,CAAC,OAAQ,QAAS,SAAU,OAAQ,MAAO,QACjD4Q,KAAM,CAAC,OAAQ,SACf5T,IAAK,CAAC,OAAQ,SACdygB,SAAU,CAAC,OAAQ,UAErB8+B,SAAU,CACR,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,SACA,KACA,IACA,MACA,OACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,IACA,KACA,KACA,QACA,QACA,QACA,QACA,aACA,KACA,KACA,KACA,MACA,IACA,OACA,MACA,KACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,SACA,UACA,UACA,UACA,SACA,aACA,OACA,MACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,SAEFnxC,WAAY,CACVpU,EAAG,CAAC,QACJ8hE,IAAK,CAAC,MAAO,YACb/nC,MAAO,CACL,CAAC,OAAQ,YACT,CAAC,YAAY,IAEfgoC,GAAI,CAAC,CAAC,YAAa,mBACnBC,IAAK,CAAC,YAAa,YACnB52D,WAAY,CAAC,QACb62D,IAAK,CAAC,QACNC,IAAK,CAAC,QACN1gE,EAAG,CAAC,QACJ,IAAK,CACH,OACA,SACA,gBACA,YACA,SACA,QACA,MACA,kBACA,aACA,YACA,iBACA,OACA,SACA,cACA,cACA,OACA,UACA,UACA,UACA,QACA,OACA,UACA,QACA,UACA,SACA,WACA,MACA,WACA,UACA,UACA,QACA,UACA,SACA,WACA,SACA,QACA,KACA,QACA,OACA,YACA,QACA,SACA,WACA,OACA,SACA,UACA,SACA,OACA,SACA,WACA,MACA,MACA,OACA,UACA,QACA,QACA,WACA,QACA,OACA,OACA,QACA,UACA,WACA,SACA,QACA,OACA,SACA,SACA,QACA,SACA,QACA,aAGJiiB,SAAU,CACRsW,MAAO,CACLtyB,KAAM,WACN2F,UAAU,KC3HVrF,GAAM,CAAC,EAAExD,eAGT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","sources":["../node_modules/@lexical/react/LexicalCollaborationContext.js","../node_modules/@lexical/react/LexicalCollaborationContext.prod.js","../node_modules/@lexical/react/LexicalNestedComposer.js","../node_modules/@lexical/react/LexicalNestedComposer.prod.js","../node_modules/extend/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/hastscript/lib/core.js","../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hastscript/lib/svg.js","../node_modules/hastscript/lib/html.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-from-parse5/lib/index.js","../node_modules/vfile-location/lib/index.js","../node_modules/hast-util-to-parse5/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/parse5/dist/common/unicode.js","../node_modules/parse5/dist/common/error-codes.js","../node_modules/parse5/dist/tokenizer/preprocessor.js","../node_modules/parse5/dist/common/token.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","../node_modules/parse5/dist/common/html.js","../node_modules/parse5/dist/tokenizer/index.js","../node_modules/parse5/dist/parser/formatting-element-list.js","../node_modules/parse5/dist/parser/open-element-stack.js","../node_modules/parse5/dist/tree-adapters/default.js","../node_modules/parse5/dist/common/doctype.js","../node_modules/parse5/dist/common/foreign-content.js","../node_modules/parse5/dist/parser/index.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","../node_modules/parse5/dist/serializer/index.js","../node_modules/hast-util-raw/lib/index.js","../node_modules/hast-util-sanitize/lib/schema.js","../node_modules/hast-util-sanitize/lib/index.js","../node_modules/hast-util-whitespace/index.js","../node_modules/hast-util-to-html/lib/omission/util/siblings.js","../node_modules/hast-util-to-html/lib/omission/omission.js","../node_modules/hast-util-to-html/lib/omission/closing.js","../node_modules/hast-util-to-html/lib/omission/opening.js","../node_modules/hast-util-to-html/lib/handle/element.js","../node_modules/hast-util-to-html/lib/handle/text.js","../node_modules/hast-util-to-html/lib/handle/index.js","../node_modules/hast-util-to-html/lib/handle/comment.js","../node_modules/hast-util-to-html/lib/handle/doctype.js","../node_modules/hast-util-to-html/lib/handle/raw.js","../node_modules/hast-util-to-html/lib/handle/root.js","../node_modules/hast-util-to-html/lib/index.js","../node_modules/@mdxeditor/editor/dist/TableEditor-92be617d.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst LexicalCollaborationContext = process.env.NODE_ENV === 'development' ? require('./LexicalCollaborationContext.dev.js') : require('./LexicalCollaborationContext.prod.js')\nmodule.exports = LexicalCollaborationContext;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=require(\"react\");\nlet c=[[\"Cat\",\"rgb(125, 50, 0)\"],[\"Dog\",\"rgb(100, 0, 0)\"],[\"Rabbit\",\"rgb(150, 0, 0)\"],[\"Frog\",\"rgb(200, 0, 0)\"],[\"Fox\",\"rgb(200, 75, 0)\"],[\"Hedgehog\",\"rgb(0, 75, 0)\"],[\"Pigeon\",\"rgb(0, 125, 0)\"],[\"Squirrel\",\"rgb(75, 100, 0)\"],[\"Bear\",\"rgb(125, 100, 0)\"],[\"Tiger\",\"rgb(0, 0, 150)\"],[\"Leopard\",\"rgb(0, 0, 200)\"],[\"Zebra\",\"rgb(0, 0, 250)\"],[\"Wolf\",\"rgb(0, 100, 150)\"],[\"Owl\",\"rgb(0, 100, 100)\"],[\"Gull\",\"rgb(100, 0, 100)\"],[\"Squid\",\"rgb(150, 0, 150)\"]],d=c[Math.floor(Math.random()*c.length)],e=b.createContext({clientID:0,\ncolor:d[1],isCollabActive:!1,name:d[0],yjsDocMap:new Map});exports.CollaborationContext=e;exports.useCollaborationContext=function(f,g){let a=b.useContext(e);null!=f&&(a.name=f);null!=g&&(a.color=g);return a}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst LexicalNestedComposer = process.env.NODE_ENV === 'development' ? require('./LexicalNestedComposer.dev.js') : require('./LexicalNestedComposer.prod.js')\nmodule.exports = LexicalNestedComposer;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var c=require(\"@lexical/react/LexicalCollaborationContext\"),h=require(\"@lexical/react/LexicalComposerContext\"),p=require(\"react\");function q(a){let f=new URLSearchParams;f.append(\"code\",a);for(let d=1;d<arguments.length;d++)f.append(\"v\",arguments[d]);throw Error(`Minified Lexical error #${a}; visit https://lexical.dev/docs/error?${f} for the full message or `+\"use the non-minified dev environment for full errors and additional helpful warnings.\");}\nexports.LexicalNestedComposer=function({initialEditor:a,children:f,initialNodes:d,initialTheme:r,skipCollabChecks:t}){let n=p.useRef(!1),k=p.useContext(h.LexicalComposerContext);null==k&&q(9);let [e,{getTheme:u}]=k,x=p.useMemo(()=>{var b=r||u()||void 0;const v=h.createLexicalComposerContext(k,b);void 0!==b&&(a._config.theme=b);a._parentEditor=e;if(d)for(var g of d)b=g.getType(),a._nodes.set(b,{klass:g,replace:null,replaceWithKlass:null,transforms:new Set});else{g=a._nodes=new Map(e._nodes);for(const [w,\nl]of g)a._nodes.set(w,{klass:l.klass,replace:l.replace,replaceWithKlass:l.replaceWithKlass,transforms:new Set})}a._config.namespace=e._config.namespace;a._editable=e._editable;return[a,v]},[]),{isCollabActive:y,yjsDocMap:z}=c.useCollaborationContext(),m=t||n.current||z.has(a.getKey());p.useEffect(()=>{m&&(n.current=!0)},[m]);p.useEffect(()=>e.registerEditableListener(b=>{a.setEditable(b)}),[a,e]);return p.createElement(h.LexicalComposerContext.Provider,{value:x},!y||m?f:null)}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes.\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements.\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {Schema} schema\n *   Current schema.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n * @property {boolean} location\n *   Whether location info was found.\n */\n\nimport {h, s} from 'hastscript'\nimport {html, svg, find} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | VFile | null | undefined} [options]\n *   Configuration.\n * @returns {Node}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const options_ = options || {}\n  /** @type {Options} */\n  let settings\n  /** @type {VFile | undefined} */\n  let file\n\n  if (isFile(options_)) {\n    file = options_\n    settings = {}\n  } else {\n    file = options_.file || undefined\n    settings = options_\n  }\n\n  return one(\n    {\n      schema: settings.space === 'svg' ? svg : html,\n      file,\n      verbose: settings.verbose,\n      location: false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Node}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Node} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // @ts-expect-error: always defined as we give valid input.\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      // @ts-expect-error Types are out of date.\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<Content>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<Content>} */\n  const result = []\n\n  while (++index < nodes.length) {\n    // @ts-expect-error Assume no roots in `nodes`.\n    result[index] = one(state, nodes[index])\n  }\n\n  return result\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    /** @type {Root} */\n    // @ts-expect-error Types are wrong.\n    const content = one(state, reference.content)\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Node} to\n *   hast node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Node} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      node.data = {\n        position: {\n          // @ts-expect-error: assume not `undefined`.\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n  // @ts-expect-error `undefined` is fine.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n\n/**\n * Check if something is a file.\n *\n * @param {VFile | Options} value\n *   File or options.\n * @returns {value is VFile}\n *   Whether `value` is a file.\n */\nfunction isFile(value) {\n  return 'messages' in value\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n */\n\n/**\n * @typedef Point\n *   unist point, where `line` and `column` can be `undefined`.\n * @property {number | undefined} line\n *   Line.\n * @property {number | undefined} column\n *   Column.\n * @property {number | undefined} [offset]\n *   Offset.\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get a line/column-based `point` from `offset`.\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {Point}\n *   Point, line/column are undefined for invalid or out of bounds input.\n *\n * @callback ToOffset\n *   Get an offset from a line/column-based `point`.\n * @param {Point | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number}\n *   Offset or `-1` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get a line/column-based `point` from `offset`.\n * @property {ToOffset} toOffset\n *   Get an offset from a line/column-based `point`.\n */\n\n/**\n * Index the given document so you can translate between line/column and offset\n * based positional info.\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /** @type {Array<number>} */\n  const indices = []\n  const search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n\n    return -1\n  }\n}\n","/**\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5Fragment\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['documentType']} P5Doctype\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['parentNode']} P5Parent\n * @typedef {import('parse5').Token.Attribute} P5Attribute\n * @typedef {Exclude<P5Node, P5Document | P5Fragment>} P5Child\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {'html' | 'svg'} Space\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {html, svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst own = {}.hasOwnProperty\n\n/** @type {(from: Node, schema: Schema) => P5Node} */\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to Parse5’s AST.\n *\n * @param {Node} tree\n *   Tree to transform.\n * @param {Options | Space | null | undefined} [options]\n *   Configuration.\n * @returns {P5Node}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const space = options && typeof options === 'object' ? options.space : options\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Document}\n */\nfunction root(node, schema) {\n  /** @type {P5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Fragment}\n */\nfunction fragment(node, schema) {\n  /** @type {P5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n * @returns {P5Doctype}\n */\nfunction doctype(node) {\n  /** @type {P5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    // @ts-expect-error: change to `null` in a major?\n    parentNode: undefined\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n * @returns {P5Text}\n */\nfunction text(node) {\n  /** @type {P5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n * @returns {P5Comment}\n */\nfunction comment(node) {\n  /** @type {P5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Element}\n *   `parse5` node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<P5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  /** @type {P5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: html and svg both have a space.\n    namespaceURI: webNamespaces[currentSchema.space],\n    childNodes: [],\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<string | number> | string | number | boolean | null | undefined} value\n *   hast property value.\n * @returns {P5Attribute | void}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {P5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<Content>} children\n *   List of children.\n * @param {P5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<P5Child>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<P5Child>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {P5Child} */\n      // @ts-expect-error assume no document.\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Node} from\n *   hast node.\n * @param {P5Node} to\n *   `parse5` node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      // @ts-expect-error assume this is set.\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      // @ts-expect-error assume this is set.\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map",null,null,null,null,"/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map",null,"import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.TagToken} TagToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @typedef {{type: 'comment', value: {stitch: Node}}} Stitch\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom hast node types to pass through (keep).\n *\n *   If the passed through nodes have children, those children are expected to\n *   be hast again and will be handled.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {(node: Node) => void} handle\n *   Add a hast node to the parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n * @property {Options} options\n *   User configuration.\n */\n\nimport extend from 'extend'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {zwitch} from 'zwitch'\nimport {webNamespaces} from 'web-namespaces'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/641eb91/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Node} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Node}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Node, state: State) => void} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(null, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', (node, index, parent) => {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent !== null && index !== null) {\n        // @ts-expect-error: assume the stitch is allowed.\n        parent.children[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<Content>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {void}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {void}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {void}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {void}\n *   Nothing.\n */\nfunction text(node, state) {\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {void}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Node} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {void}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Node} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    const fakeRoot = raw({type: 'root', children: node.children}, state.options)\n    // @ts-expect-error Assume a given parent yields a parent.\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {void}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: yeah, we’re passing stiches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {void}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/8e22fe4/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {void}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Node} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point} point\n *   Point.\n * @returns {void}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  // Similar to:\n  // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js#L95>.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/edb85df/packages/parse5/lib/tokenizer/index.ts#L225-L249>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point} point\n *   Point.\n * @returns {void}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (\n    point.line &&\n    point.column &&\n    point.offset !== null &&\n    point.offset !== undefined\n  ) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {void}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && node.tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n  // Always element.\n  /* c8 ignore next */\n  const attrs = 'attrs' in result ? result.attrs : []\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs,\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = node.tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {void}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(node.tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tag.tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Node} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Node | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  return {\n    startLine: start.line,\n    startCol: start.column,\n    // @ts-expect-error: could be `undefined` in hast, which `parse5` types don’t want.\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    // @ts-expect-error: could be `undefined` in hast, which `parse5` types don’t want.\n    endOffset: end.offset\n  }\n}\n\n/**\n * @template {Node} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? extend(true, {}, {...node, children: []})\n    : extend(true, {}, node)\n}\n","/** @type {import('./index.js').Schema} */\nexport const defaultSchema = {\n  strip: ['script'],\n  clobberPrefix: 'user-content-',\n  clobber: ['name', 'id'],\n  ancestors: {\n    tbody: ['table'],\n    tfoot: ['table'],\n    thead: ['table'],\n    td: ['table'],\n    th: ['table'],\n    tr: ['table']\n  },\n  protocols: {\n    href: ['http', 'https', 'mailto', 'xmpp', 'irc', 'ircs'],\n    cite: ['http', 'https'],\n    src: ['http', 'https'],\n    longDesc: ['http', 'https']\n  },\n  tagNames: [\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'br',\n    'b',\n    'i',\n    'strong',\n    'em',\n    'a',\n    'pre',\n    'code',\n    'img',\n    'tt',\n    'div',\n    'ins',\n    'del',\n    'sup',\n    'sub',\n    'p',\n    'ol',\n    'ul',\n    'table',\n    'thead',\n    'tbody',\n    'tfoot',\n    'blockquote',\n    'dl',\n    'dt',\n    'dd',\n    'kbd',\n    'q',\n    'samp',\n    'var',\n    'hr',\n    'ruby',\n    'rt',\n    'rp',\n    'li',\n    'tr',\n    'td',\n    'th',\n    's',\n    'strike',\n    'summary',\n    'details',\n    'caption',\n    'figure',\n    'figcaption',\n    'abbr',\n    'bdo',\n    'cite',\n    'dfn',\n    'mark',\n    'small',\n    'span',\n    'time',\n    'wbr',\n    'input'\n  ],\n  attributes: {\n    a: ['href'],\n    img: ['src', 'longDesc'],\n    input: [\n      ['type', 'checkbox'],\n      ['disabled', true]\n    ],\n    li: [['className', 'task-list-item']],\n    div: ['itemScope', 'itemType'],\n    blockquote: ['cite'],\n    del: ['cite'],\n    ins: ['cite'],\n    q: ['cite'],\n    '*': [\n      'abbr',\n      'accept',\n      'acceptCharset',\n      'accessKey',\n      'action',\n      'align',\n      'alt',\n      'ariaDescribedBy',\n      'ariaHidden',\n      'ariaLabel',\n      'ariaLabelledBy',\n      'axis',\n      'border',\n      'cellPadding',\n      'cellSpacing',\n      'char',\n      'charOff',\n      'charSet',\n      'checked',\n      'clear',\n      'cols',\n      'colSpan',\n      'color',\n      'compact',\n      'coords',\n      'dateTime',\n      'dir',\n      'disabled',\n      'encType',\n      'htmlFor',\n      'frame',\n      'headers',\n      'height',\n      'hrefLang',\n      'hSpace',\n      'isMap',\n      'id',\n      'label',\n      'lang',\n      'maxLength',\n      'media',\n      'method',\n      'multiple',\n      'name',\n      'noHref',\n      'noShade',\n      'noWrap',\n      'open',\n      'prompt',\n      'readOnly',\n      'rel',\n      'rev',\n      'rows',\n      'rowSpan',\n      'rules',\n      'scope',\n      'selected',\n      'shape',\n      'size',\n      'span',\n      'start',\n      'summary',\n      'tabIndex',\n      'target',\n      'title',\n      'type',\n      'useMap',\n      'vAlign',\n      'value',\n      'vSpace',\n      'width',\n      'itemProp'\n    ]\n  },\n  required: {\n    input: {\n      type: 'checkbox',\n      disabled: true\n    }\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {Content | Root} Node\n *\n * @typedef {Properties[string]} PropertyValue\n *   Possible property values.\n * @typedef {string | number | boolean} PrimitivePropertyValue\n *   Possible primitive HTML attribute values.\n *\n * @typedef {Record<string, Array<string | [string, ...Array<PrimitivePropertyValue | RegExp>]>>} Attributes\n *  Map of tag names to allow lists for each property.\n * @typedef {Record<string, Array<PrimitivePropertyValue | RegExp>>} AttributeClean\n *   Normalized input.\n *\n * @typedef Schema\n *   Sanitization configuration.\n * @property {Attributes | undefined} [attributes]\n *   Map of tag names to allowed properties.\n *\n *   The special `'*'` key defines property names allowed on all elements.\n * @property {Record<string, Record<string, PropertyValue>> | undefined} [required]\n *   Map of tag names to required property names and their default property value.\n * @property {Array<string> | undefined} [tagNames]\n *   List of allowed tag names.\n * @property {Record<string, Array<string>> | undefined} [protocols]\n *   Map of protocols to allow in property values.\n * @property {Record<string, Array<string>> | undefined} [ancestors]\n *   Map of tag names to their required ancestor elements.\n * @property {Array<string> | undefined} [clobber]\n *   List of allowed property names which can clobber.\n * @property {string | undefined} [clobberPrefix]\n *   Prefix to use before potentially clobbering property names.\n * @property {Array<string> | undefined} [strip]\n *   Names of elements to strip from the tree.\n * @property {boolean | undefined} [allowComments]\n *   Whether to allow comments.\n * @property {boolean | undefined} [allowDoctypes]\n *   Whether to allow doctypes.\n *\n * @typedef {(schema: Schema, value: any, node: any, stack: Array<string>) => unknown} Handler\n * @typedef {Record<string, Handler>} NodeDefinition\n * @typedef {((schema: Schema, node: Node) => NodeDefinition | undefined)} NodeDefinitionGetter\n * @typedef {Record<string, NodeDefinition | NodeDefinitionGetter>} NodeSchema\n */\n\nimport {defaultSchema} from './schema.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {NodeSchema} */\nconst nodeSchema = {\n  root: {children: all},\n  doctype: handleDoctype,\n  comment: handleComment,\n  element: {\n    tagName: handleTagName,\n    properties: handleProperties,\n    children: all\n  },\n  text: {value: handleValue},\n  '*': {data: allow, position: allow}\n}\n\n/**\n * Utility to sanitize a tree\n *\n * @param {Node} node\n *   Hast tree to sanitize\n * @param {Schema} [schema]\n *   Schema defining how to sanitize - defaults to Github style sanitation\n */\nexport function sanitize(node, schema) {\n  /** @type {Node} */\n  let ctx = {type: 'root', children: []}\n\n  if (node && typeof node === 'object' && node.type) {\n    const replace = one(\n      Object.assign({}, defaultSchema, schema || {}),\n      node,\n      []\n    )\n\n    if (replace) {\n      if (Array.isArray(replace)) {\n        if (replace.length === 1) {\n          ctx = replace[0]\n        } else {\n          // @ts-expect-error Assume `root` is not a child.\n          ctx.children = replace\n        }\n      } else {\n        ctx = replace\n      }\n    }\n  }\n\n  return ctx\n}\n\n/**\n * Sanitize `node`.\n *\n * @param {Schema} schema\n * @param {Node} node\n * @param {Array<string>} stack\n * @returns {Node | Array<Node> | undefined}\n */\nfunction one(schema, node, stack) {\n  const type = node && node.type\n  /** @type {Node} */\n  // @ts-expect-error rest of props added later.\n  const replacement = {type: node.type}\n  /** @type {boolean | undefined} */\n  let replace\n\n  if (own.call(nodeSchema, type)) {\n    /** @type {NodeDefinition | NodeDefinitionGetter | undefined} */\n    let definition = nodeSchema[type]\n\n    if (typeof definition === 'function') {\n      definition = definition(schema, node)\n    }\n\n    if (definition) {\n      const allowed = Object.assign({}, definition, nodeSchema['*'])\n      /** @type {string} */\n      let key\n\n      replace = true\n\n      for (key in allowed) {\n        if (own.call(allowed, key)) {\n          // @ts-expect-error: fine.\n          // type-coverage:ignore-next-line\n          const result = allowed[key](schema, node[key], node, stack)\n\n          // eslint-disable-next-line max-depth\n          if (result === false) {\n            replace = undefined\n            // Set the non-safe value.\n            // @ts-expect-error: fine.\n            // type-coverage:ignore-next-line\n            replacement[key] = node[key]\n          } else if (result !== undefined && result !== null) {\n            // @ts-expect-error: fine.\n            // type-coverage:ignore-next-line\n            replacement[key] = result\n          }\n        }\n      }\n    }\n  }\n\n  if (replace) {\n    return replacement\n  }\n\n  return replacement.type === 'element' &&\n    schema.strip &&\n    !schema.strip.includes(replacement.tagName)\n    ? replacement.children\n    : undefined\n}\n\n/**\n * Sanitize `children`.\n *\n * @type {Handler}\n * @param {Array<Node>} children\n * @param {Node} node\n * @returns {Array<Node>}\n */\nfunction all(schema, children, node, stack) {\n  /** @type {Array<Node>} */\n  const results = []\n\n  if (Array.isArray(children)) {\n    let index = -1\n\n    if (node.type === 'element') {\n      stack.push(node.tagName)\n    }\n\n    while (++index < children.length) {\n      const value = one(schema, children[index], stack)\n\n      if (value) {\n        if (Array.isArray(value)) {\n          results.push(...value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      stack.pop()\n    }\n  }\n\n  return results\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleDoctype(schema) {\n  return schema.allowDoctypes ? {name: handleDoctypeName} : undefined\n}\n\n/** @type {NodeDefinitionGetter} */\nfunction handleComment(schema) {\n  return schema.allowComments ? {value: handleCommentValue} : undefined\n}\n\n/**\n * Sanitize `properties`.\n *\n * @type {Handler}\n * @param {Properties} properties\n * @param {Element} node\n * @returns {Properties}\n */\nfunction handleProperties(schema, properties, node, stack) {\n  const name = handleTagName(schema, node.tagName, node, stack)\n  /* c8 ignore next */\n  const attrs = schema.attributes || {}\n  /* c8 ignore next */\n  const reqs = schema.required || {}\n  const props = properties || {}\n  const allowed = Object.assign(\n    {},\n    toPropertyValueMap(attrs['*']),\n    toPropertyValueMap(name && own.call(attrs, name) ? attrs[name] : [])\n  )\n  /** @type {Properties} */\n  const result = {}\n  /** @type {string} */\n  let key\n\n  for (key in props) {\n    if (own.call(props, key)) {\n      let value = props[key]\n      /** @type {AttributeClean[string]} */\n      let definition\n\n      if (own.call(allowed, key)) {\n        definition = allowed[key]\n      } else if (data(key) && own.call(allowed, 'data*')) {\n        definition = allowed['data*']\n      } else {\n        continue\n      }\n\n      value = Array.isArray(value)\n        ? handlePropertyValues(schema, value, key, definition)\n        : handlePropertyValue(schema, value, key, definition)\n\n      if (value !== undefined && value !== null) {\n        result[key] = value\n      }\n    }\n  }\n\n  if (name && own.call(reqs, name)) {\n    for (key in reqs[name]) {\n      if (!own.call(result, key)) {\n        result[key] = reqs[name][key]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Always return a valid HTML5 doctype.\n *\n * @type {Handler}\n * @returns {string}\n */\nfunction handleDoctypeName() {\n  return 'html'\n}\n\n/**\n * Sanitize `tagName`.\n *\n * @param {Schema} schema\n * @param {string} tagName\n * @param {Node} _\n * @param {Array<string>} stack\n * @returns {string | false}\n */\nfunction handleTagName(schema, tagName, _, stack) {\n  const name = typeof tagName === 'string' ? tagName : ''\n  let index = -1\n\n  if (\n    !name ||\n    name === '*' ||\n    (schema.tagNames && !schema.tagNames.includes(name))\n  ) {\n    return false\n  }\n\n  // Some nodes can break out of their context if they don’t have a certain\n  // ancestor.\n  if (schema.ancestors && own.call(schema.ancestors, name)) {\n    while (++index < schema.ancestors[name].length) {\n      if (stack.includes(schema.ancestors[name][index])) {\n        return name\n      }\n    }\n\n    return false\n  }\n\n  return name\n}\n\n/**\n * See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n *\n * @type {Handler}\n * @param {unknown} value\n * @returns {string}\n */\nfunction handleCommentValue(_, value) {\n  /** @type {string} */\n  const result = typeof value === 'string' ? value : ''\n  const index = result.indexOf('-->')\n  return index < 0 ? result : result.slice(0, index)\n}\n\n/**\n * Sanitize `value`.\n *\n * @type {Handler}\n * @param {unknown} value\n * @returns {string}\n */\nfunction handleValue(_, value) {\n  return typeof value === 'string' ? value : ''\n}\n\n/**\n * Allow `value`.\n *\n * @type {Handler}\n * @param {unknown} value\n */\nfunction allow(_, value) {\n  return value\n}\n\n/**\n * Sanitize a property value which is a list.\n *\n * @param {Schema} schema\n * @param {Array<unknown>} values\n * @param {string} prop\n * @param {AttributeClean[string]} definition\n * @returns {Array<string | number>}\n */\nfunction handlePropertyValues(schema, values, prop, definition) {\n  let index = -1\n  /** @type {Array<string | number>} */\n  const result = []\n\n  while (++index < values.length) {\n    const value = handlePropertyValue(schema, values[index], prop, definition)\n\n    if (value !== undefined && value !== null) {\n      // @ts-expect-error Assume no booleans were in arrays.\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @param {AttributeClean[string]} definition\n * @returns {PropertyValue}\n */\nfunction handlePropertyValue(schema, value, prop, definition) {\n  if (\n    (typeof value === 'boolean' ||\n      typeof value === 'number' ||\n      typeof value === 'string') &&\n    safeProtocol(schema, value, prop) &&\n    (definition.length === 0 ||\n      definition.some((allowed) =>\n        allowed && typeof allowed === 'object' && 'flags' in allowed\n          ? allowed.test(String(value))\n          : allowed === value\n      ))\n  ) {\n    return schema.clobberPrefix &&\n      schema.clobber &&\n      schema.clobber.includes(prop)\n      ? schema.clobberPrefix + value\n      : value\n  }\n}\n\n/**\n * Check whether `value` is a safe URL.\n *\n * @param {Schema} schema\n * @param {unknown} value\n * @param {string} prop\n * @returns {boolean}\n */\nfunction safeProtocol(schema, value, prop) {\n  const url = String(value)\n  const colon = url.indexOf(':')\n  const questionMark = url.indexOf('?')\n  const numberSign = url.indexOf('#')\n  const slash = url.indexOf('/')\n  const protocols =\n    schema.protocols && own.call(schema.protocols, prop)\n      ? schema.protocols[prop].concat()\n      : []\n  let index = -1\n\n  if (\n    protocols.length === 0 ||\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  while (++index < protocols.length) {\n    if (\n      colon === protocols[index].length &&\n      url.slice(0, protocols[index].length) === protocols[index]\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a map from a list of props or a list of properties and values.\n *\n * @param {Attributes[string]} values\n * @returns {AttributeClean}\n */\nfunction toPropertyValueMap(values) {\n  /** @type {AttributeClean} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    const value = values[index]\n\n    if (Array.isArray(value)) {\n      result[value[0]] = value.slice(1)\n    } else {\n      result[value] = []\n    }\n  }\n\n  return result\n}\n\n/**\n * Check if `prop` is a data property.\n *\n * @param {string} prop\n * @returns {boolean}\n */\nfunction data(prop) {\n  return prop.length > 4 && prop.slice(0, 4).toLowerCase() === 'data'\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Content} Content\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent | null | undefined} parent\n   * @param {number | null | undefined} index\n   * @param {boolean | null | undefined} [includeWhitespace=false]\n   * @returns {Content}\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : []\n    let offset = (index || 0) + increment\n    let next = siblings && siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    return next\n  }\n}\n","/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  html,\n  head: headOrColgroupOrCaption,\n  body,\n  p,\n  li,\n  dt,\n  dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup,\n  option,\n  menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead,\n  tbody,\n  tfoot,\n  tr,\n  td: cells,\n  th: cells\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n// eslint-disable-next-line complexity\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</menuitem>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction menuitem(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'menuitem' ||\n        next.tagName === 'hr' ||\n        next.tagName === 'menu'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n","/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Content} Content\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingBefore, siblingAfter} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  html,\n  head,\n  body,\n  colgroup,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array<string>} */\n  const seen = []\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && head.type === 'element' && head.tagName === 'col'\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && head.type === 'element' && head.tagName === 'tr'\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').PropertyValue} PropertyValue\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {opening} from '../omission/opening.js'\nimport {closing} from '../omission/closing.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'name' | 'unquoted' | 'single' | 'double', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\n// eslint-disable-next-line complexity\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attrs = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  if (content) selfClosing = false\n\n  if (attrs || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attrs.charAt(attrs.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} props\n * @returns {string}\n */\nfunction serializeAttributes(state, props) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (props) {\n    for (key in props) {\n      if (props[key] !== undefined && props[key] !== null) {\n        const value = serializeAttribute(state, key, props[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : null\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {PropertyValue} value\n * @returns {string}\n */\n// eslint-disable-next-line complexity\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: constants.unquoted[x][y],\n        attribute: true\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Raw} Raw\n * @typedef {import('../types.js').Text} Text\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a text node.\n *\n * @param {Text | Raw} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: ['<', '&']\n        })\n      )\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Node, index: number | undefined, parent: Parent | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node) {\n  // @ts-expect-error: `type` is defined.\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n","/**\n * @typedef {import('../types.js').Comment} Comment\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: ['<', '>']\n      })\n    )\n  }\n}\n","/**\n * @typedef {import('../types.js').DocType} DocType\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {DocType} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Raw} Raw\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n","/**\n * @typedef {import('../types.js').Root} Root\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Content} Content\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').State} State\n */\n\nimport {html, svg} from 'property-information'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {handle} from './handle/index.js'\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Node | Array<Content>} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {string}\n *   Serialized HTML.\n */\n// eslint-disable-next-line complexity\nexport function toHtml(tree, options) {\n  const options_ = options || {}\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || options_.entities || {},\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Node} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parent | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || []\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","import { ContentEditable } from \"@lexical/react/LexicalContentEditable\";\nimport LexicalErrorBoundary from \"@lexical/react/LexicalErrorBoundary\";\nimport { LexicalNestedComposer } from \"@lexical/react/LexicalNestedComposer\";\nimport { RichTextPlugin } from \"@lexical/react/LexicalRichTextPlugin\";\nimport { $createParagraphNode, createEditor, KEY_TAB_COMMAND, COMMAND_PRIORITY_CRITICAL, KEY_ENTER_COMMAND, BLUR_COMMAND, $getRoot } from \"lexical\";\nimport * as React from \"react\";\nimport React__default, { useEffect } from \"react\";\nimport { s as styles, u as useEmitterValues, t as theme, i as importMdastTreeToLexical, S as SharedHistoryPlugin, e as exportLexicalTreeToMdast } from \"./index-2fb34a7e.js\";\nimport { toHast } from \"mdast-util-to-hast\";\nimport { raw } from \"hast-util-raw\";\nimport { sanitize } from \"hast-util-sanitize\";\nimport { toHtml } from \"hast-util-to-html\";\nimport * as RadixPopover from \"@radix-ui/react-popover\";\nimport classNames from \"classnames\";\nimport * as RadixToolbar from \"@radix-ui/react-toolbar\";\nimport \"@lexical/react/LexicalComposer\";\nimport \"@lexical/react/LexicalHorizontalRulePlugin\";\nimport \"@lexical/react/LexicalLinkPlugin\";\nimport \"@lexical/react/LexicalListPlugin\";\nimport \"@lexical/react/LexicalTabIndentationPlugin\";\nimport \"@lexical/code\";\nimport \"@lexical/link\";\nimport \"@lexical/list\";\nimport \"@lexical/react/LexicalHorizontalRuleNode\";\nimport \"@lexical/rich-text\";\nimport \"mdast-util-directive\";\nimport \"mdast-util-from-markdown\";\nimport \"mdast-util-frontmatter\";\nimport \"mdast-util-gfm-table\";\nimport \"mdast-util-mdx\";\nimport \"micromark-extension-directive\";\nimport \"micromark-extension-frontmatter\";\nimport \"micromark-extension-gfm-table\";\nimport \"micromark-extension-mdxjs\";\nimport \"@lexical/utils\";\nimport \"@lexical/react/LexicalComposerContext\";\nimport \"@lexical/selection\";\nimport \"@lexical/react/LexicalHistoryPlugin\";\nimport \"mdast-util-to-markdown\";\nimport \"@radix-ui/react-tooltip\";\nimport \"downshift\";\nimport \"@lexical/markdown\";\nimport \"@lexical/react/LexicalMarkdownShortcutPlugin\";\nimport \"react-diff-view\";\nimport \"unidiff\";\nimport \"@radix-ui/react-select\";\nimport \"@radix-ui/react-dialog\";\nconst MarkdownAstRenderer = (props) => {\n  const root = { type: \"root\", children: props.mdastChildren };\n  const hast = raw(toHast(root, { allowDangerousHtml: true }));\n  const safeHast = sanitize(hast);\n  const html = toHtml(safeHast);\n  return /* @__PURE__ */ React__default.createElement(\"span\", { dangerouslySetInnerHTML: { __html: html || \"&nbsp;\" } });\n};\nconst SvgMoreHoriz = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: 24, height: 24, fill: \"currentColor\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"mask\", { id: \"a\", width: 24, height: 24, x: 0, y: 0, maskUnits: \"userSpaceOnUse\", style: {\n  maskType: \"alpha\"\n} }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M0 0h24v24H0z\" })), /* @__PURE__ */ React.createElement(\"g\", { mask: \"url(#a)\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M6 14c-.55 0-1.02-.196-1.412-.588A1.926 1.926 0 0 1 4 12c0-.55.196-1.02.588-1.412A1.926 1.926 0 0 1 6 10c.55 0 1.02.196 1.412.588.392.391.588.862.588 1.412 0 .55-.196 1.02-.588 1.412A1.926 1.926 0 0 1 6 14Zm6 0c-.55 0-1.02-.196-1.412-.588A1.926 1.926 0 0 1 10 12c0-.55.196-1.02.588-1.412A1.926 1.926 0 0 1 12 10c.55 0 1.02.196 1.412.588.392.391.588.862.588 1.412 0 .55-.196 1.02-.588 1.412A1.926 1.926 0 0 1 12 14Zm6 0c-.55 0-1.02-.196-1.413-.588A1.926 1.926 0 0 1 16 12c0-.55.196-1.02.587-1.412A1.926 1.926 0 0 1 18 10c.55 0 1.02.196 1.413.588.391.391.587.862.587 1.412 0 .55-.196 1.02-.587 1.412A1.926 1.926 0 0 1 18 14Z\" })));\nconst MoreHorizIcon = SvgMoreHoriz;\nconst SvgFormatAlignLeft = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: 20, height: 20, fill: \"currentColor\", viewBox: \"0 0 20 20\", ...props }, /* @__PURE__ */ React.createElement(\"mask\", { id: \"a\", width: 20, height: 20, x: 0, y: 0, maskUnits: \"userSpaceOnUse\", style: {\n  maskType: \"alpha\"\n} }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M0 0h20v20H0z\" })), /* @__PURE__ */ React.createElement(\"g\", { mask: \"url(#a)\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M3 17v-1.5h14V17H3Zm0-3.125v-1.5h10v1.5H3Zm0-3.125v-1.5h14v1.5H3Zm0-3.125v-1.5h10v1.5H3ZM3 4.5V3h14v1.5H3Z\" })));\nconst AlignLeftIcon = SvgFormatAlignLeft;\nconst SvgFormatAlignCenter = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: 20, height: 20, fill: \"currentColor\", viewBox: \"0 0 20 20\", ...props }, /* @__PURE__ */ React.createElement(\"mask\", { id: \"a\", width: 20, height: 20, x: 0, y: 0, maskUnits: \"userSpaceOnUse\", style: {\n  maskType: \"alpha\"\n} }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M0 0h20v20H0z\" })), /* @__PURE__ */ React.createElement(\"g\", { mask: \"url(#a)\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M3 17v-1.5h14V17H3Zm3-3.125v-1.5h8v1.5H6ZM3 10.75v-1.5h14v1.5H3Zm3-3.125v-1.5h8v1.5H6ZM3 4.5V3h14v1.5H3Z\" })));\nconst AlignCenterIcon = SvgFormatAlignCenter;\nconst SvgFormatAlignRight = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: 20, height: 20, fill: \"currentColor\", viewBox: \"0 0 20 20\", ...props }, /* @__PURE__ */ React.createElement(\"mask\", { id: \"a\", width: 20, height: 20, x: 0, y: 0, maskUnits: \"userSpaceOnUse\", style: {\n  maskType: \"alpha\"\n} }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M0 0h20v20H0z\" })), /* @__PURE__ */ React.createElement(\"g\", { mask: \"url(#a)\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M3 17v-1.5h14V17H3Zm4-3.125v-1.5h10v1.5H7ZM3 10.75v-1.5h14v1.5H3Zm4-3.125v-1.5h10v1.5H7ZM3 4.5V3h14v1.5H3Z\" })));\nconst AlignRightIcon = SvgFormatAlignRight;\nconst SvgInsertColLeft = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: 20, height: 20, fill: \"currentColor\", viewBox: \"0 0 20 20\", ...props }, /* @__PURE__ */ React.createElement(\"mask\", { id: \"a\", width: 20, height: 20, x: 0, y: 0, maskUnits: \"userSpaceOnUse\", style: {\n  maskType: \"alpha\"\n} }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M0 20h20v20H0z\", transform: \"rotate(-90 0 20)\" })), /* @__PURE__ */ React.createElement(\"g\", { mask: \"url(#a)\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M15.75 4.5H13v2.75h-1.5V4.5H8.75V3h2.75V.25H13V3h2.75v1.5ZM13 17H5V3h2.25v1.5H6.5v11h5V8.75H13V17Z\" })));\nconst InsertColLeftIcon = SvgInsertColLeft;\nconst SvgInsertColRight = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: 20, height: 20, fill: \"currentColor\", viewBox: \"0 0 20 20\", ...props }, /* @__PURE__ */ React.createElement(\"mask\", { id: \"a\", width: 20, height: 20, x: 0, y: 0, maskUnits: \"userSpaceOnUse\", style: {\n  maskType: \"alpha\"\n} }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M0 0h20v20H0z\", transform: \"matrix(0 -1 -1 0 20 20)\" })), /* @__PURE__ */ React.createElement(\"g\", { mask: \"url(#a)\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M4.25 4.5H7v2.75h1.5V4.5h2.75V3H8.5V.25H7V3H4.25v1.5ZM7 17h8V3h-2.25v1.5h.75v11h-5V8.75H7V17Z\" })));\nconst InsertColRightIcon = SvgInsertColRight;\nconst SvgDeleteSmall = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: 20, height: 20, fill: \"currentColor\", viewBox: \"0 0 20 20\", ...props }, /* @__PURE__ */ React.createElement(\"mask\", { id: \"a\", width: 20, height: 20, x: 0, y: 0, maskUnits: \"userSpaceOnUse\", style: {\n  maskType: \"alpha\"\n} }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M0 0h20v20H0z\" })), /* @__PURE__ */ React.createElement(\"g\", { mask: \"url(#a)\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M6.5 17a1.45 1.45 0 0 1-1.06-.44A1.445 1.445 0 0 1 5 15.5v-10H4V4h4V3h4v1h4v1.5h-1v9.991c0 .423-.147.78-.44 1.072A1.45 1.45 0 0 1 13.5 17h-7Zm7-11.5h-7v10h7v-10ZM8 14h1.5V7H8v7Zm2.5 0H12V7h-1.5v7Z\" })));\nconst DeleteSmallIcon = SvgDeleteSmall;\nconst SvgInsertRowAbove = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: 20, height: 20, fill: \"currentColor\", viewBox: \"0 0 20 20\", ...props }, /* @__PURE__ */ React.createElement(\"mask\", { id: \"a\", width: 20, height: 20, x: 0, y: 0, maskUnits: \"userSpaceOnUse\", style: {\n  maskType: \"alpha\"\n} }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M0 0h20v20H0z\", transform: \"matrix(-1 0 0 1 20 0)\" })), /* @__PURE__ */ React.createElement(\"g\", { mask: \"url(#a)\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M4.5 16.75V14h2.75v-1.5H4.5V9.75H3v2.75H.25V14H3v2.75h1.5ZM17 14V6H3v2.25h1.5V7.5h11v5H8.75V14H17Z\" })));\nconst InsertRowAboveIcon = SvgInsertRowAbove;\nconst SvgInsertRowBelow = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: 20, height: 20, fill: \"currentColor\", viewBox: \"0 0 20 20\", ...props }, /* @__PURE__ */ React.createElement(\"mask\", { id: \"a\", width: 20, height: 20, x: 0, y: 0, maskUnits: \"userSpaceOnUse\", style: {\n  maskType: \"alpha\"\n} }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M20 20h20v20H20z\", transform: \"rotate(180 20 20)\" })), /* @__PURE__ */ React.createElement(\"g\", { mask: \"url(#a)\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M4.5 3.25V6h2.75v1.5H4.5v2.75H3V7.5H.25V6H3V3.25h1.5ZM17 6v8H3v-2.25h1.5v.75h11v-5H8.75V6H17Z\" })));\nconst InsertRowBelowIcon = SvgInsertRowBelow;\nconst SvgAddRow = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: 20, height: 20, fill: \"currentColor\", viewBox: \"0 0 20 20\", ...props }, /* @__PURE__ */ React.createElement(\"mask\", { id: \"a\", width: 20, height: 20, x: 0, y: 0, maskUnits: \"userSpaceOnUse\", style: {\n  maskType: \"alpha\"\n} }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M20 20h20v20H20z\", transform: \"rotate(180 20 20)\" })), /* @__PURE__ */ React.createElement(\"g\", { mask: \"url(#a)\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M10.5 3.25V6h2.75v1.5H10.5v2.75H9V7.5H6.25V6H9V3.25h1.5ZM17 6v8H3V6h2.5v1.5h-1v5h11v-5H14V6h3Z\" })));\nconst AddRowIcon = SvgAddRow;\nconst SvgAddColumn = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: 20, height: 20, fill: \"currentColor\", viewBox: \"0 0 20 20\", ...props }, /* @__PURE__ */ React.createElement(\"mask\", { id: \"a\", width: 20, height: 20, x: 0, y: 0, maskUnits: \"userSpaceOnUse\", style: {\n  maskType: \"alpha\"\n} }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M0 0h20v20H0z\", transform: \"matrix(0 -1 -1 0 20 20)\" })), /* @__PURE__ */ React.createElement(\"g\", { mask: \"url(#a)\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M3.25 10.5H6v2.75h1.5V10.5h2.75V9H7.5V6.25H6V9H3.25v1.5ZM6 17h8V3H6v2.5h1.5v-1h5v11h-5V14H6v3Z\" })));\nconst AddColumnIcon = SvgAddColumn;\nconst AlignToTailwindClassMap = {\n  center: styles.centeredCell,\n  left: styles.leftAlignedCell,\n  right: styles.rightAlignedCell\n};\nconst TableEditor = ({ mdastNode, parentEditor, lexicalTable }) => {\n  const [activeCell, setActiveCell] = React__default.useState(null);\n  const setActiveCellWithBoundaries = React__default.useCallback(\n    (cell) => {\n      const colCount = lexicalTable.getColCount();\n      if (cell === null) {\n        setActiveCell(null);\n        return;\n      }\n      let [colIndex, rowIndex] = cell;\n      if (colIndex > colCount - 1) {\n        colIndex = 0;\n        rowIndex++;\n      }\n      if (colIndex < 0) {\n        colIndex = colCount - 1;\n        rowIndex -= 1;\n      }\n      if (rowIndex > lexicalTable.getRowCount() - 1) {\n        setActiveCell(null);\n        parentEditor.update(() => {\n          const nextSibling = lexicalTable.getLatest().getNextSibling();\n          if (nextSibling) {\n            lexicalTable.getLatest().selectNext();\n          } else {\n            const newParagraph = $createParagraphNode();\n            lexicalTable.insertAfter(newParagraph);\n            newParagraph.select();\n          }\n        });\n        return;\n      }\n      if (rowIndex < 0) {\n        setActiveCell(null);\n        parentEditor.update(() => {\n          lexicalTable.getLatest().selectPrevious();\n        });\n        return;\n      }\n      setActiveCell([colIndex, rowIndex]);\n    },\n    [lexicalTable, parentEditor]\n  );\n  useEffect(() => {\n    lexicalTable.focusEmitter.subscribe(setActiveCellWithBoundaries);\n  }, [lexicalTable, setActiveCellWithBoundaries]);\n  const addRowToBottom = React__default.useCallback(() => {\n    parentEditor.update(() => {\n      lexicalTable.addRowToBottom();\n      setActiveCell([0, lexicalTable.getRowCount()]);\n    });\n  }, [parentEditor, lexicalTable]);\n  const addColumnToRight = React__default.useCallback(() => {\n    parentEditor.update(() => {\n      lexicalTable.addColumnToRight();\n      setActiveCell([lexicalTable.getColCount(), 0]);\n    });\n  }, [parentEditor, lexicalTable]);\n  const [highlightedCoordinates, setHighlightedCoordinates] = React__default.useState([-1, -1]);\n  const onTableMouseOver = React__default.useCallback((e) => {\n    let tableCell = e.target;\n    while (tableCell && ![\"TH\", \"TD\"].includes(tableCell.tagName)) {\n      if (tableCell === e.currentTarget) {\n        return;\n      }\n      tableCell = tableCell.parentElement;\n    }\n    if (tableCell === null) {\n      return;\n    }\n    const tableRow = tableCell.parentElement;\n    const tableContainer = tableRow.parentElement;\n    const colIndex = tableContainer.tagName === \"TFOOT\" ? -1 : Array.from(tableRow.children).indexOf(tableCell);\n    const rowIndex = tableCell.tagName === \"TH\" ? -1 : Array.from(tableRow.parentElement.children).indexOf(tableRow);\n    setHighlightedCoordinates([colIndex, rowIndex]);\n  }, []);\n  return /* @__PURE__ */ React__default.createElement(\"table\", { className: styles.tableEditor, onMouseOver: onTableMouseOver, onMouseLeave: () => setHighlightedCoordinates([-1, -1]) }, /* @__PURE__ */ React__default.createElement(\"colgroup\", null, /* @__PURE__ */ React__default.createElement(\"col\", null), Array.from({ length: mdastNode.children[0].children.length }, (_, colIndex) => {\n    const align = mdastNode.align || [];\n    const currentColumnAlign = align[colIndex] || \"left\";\n    const className = AlignToTailwindClassMap[currentColumnAlign];\n    return /* @__PURE__ */ React__default.createElement(\"col\", { key: colIndex, className });\n  }), /* @__PURE__ */ React__default.createElement(\"col\", null)), /* @__PURE__ */ React__default.createElement(\"thead\", null, /* @__PURE__ */ React__default.createElement(\"tr\", null, /* @__PURE__ */ React__default.createElement(\"th\", { className: styles.tableToolsColumn, \"data-tool-cell\": true }, /* @__PURE__ */ React__default.createElement(\n    \"button\",\n    {\n      className: styles.iconButton,\n      title: \"Delete table\",\n      onClick: () => {\n        parentEditor.update(() => {\n          lexicalTable.selectNext();\n          lexicalTable.remove();\n        });\n      }\n    },\n    /* @__PURE__ */ React__default.createElement(DeleteSmallIcon, null)\n  )), Array.from({ length: mdastNode.children[0].children.length }, (_, colIndex) => {\n    return /* @__PURE__ */ React__default.createElement(\"th\", { key: colIndex, \"data-tool-cell\": true }, /* @__PURE__ */ React__default.createElement(\n      ColumnEditor,\n      {\n        ...{\n          setActiveCellWithBoundaries,\n          parentEditor,\n          colIndex,\n          highlightedCoordinates,\n          lexicalTable,\n          align: (mdastNode.align || [])[colIndex]\n        }\n      }\n    ));\n  }), /* @__PURE__ */ React__default.createElement(\"th\", { className: styles.tableToolsColumn }))), /* @__PURE__ */ React__default.createElement(\"tbody\", null, mdastNode.children.map((row, rowIndex) => {\n    return /* @__PURE__ */ React__default.createElement(\"tr\", { key: rowIndex }, /* @__PURE__ */ React__default.createElement(\"td\", { className: styles.toolCell, \"data-tool-cell\": true }, /* @__PURE__ */ React__default.createElement(RowEditor, { ...{ setActiveCellWithBoundaries, parentEditor, rowIndex, highlightedCoordinates, lexicalTable } })), row.children.map((mdastCell, colIndex) => {\n      var _a;\n      return /* @__PURE__ */ React__default.createElement(\n        Cell,\n        {\n          align: (_a = mdastNode.align) == null ? void 0 : _a[colIndex],\n          key: colIndex,\n          contents: mdastCell.children,\n          ...{ rowIndex, colIndex, lexicalTable, parentEditor, activeCellTuple: [activeCell, setActiveCellWithBoundaries] }\n        }\n      );\n    }), rowIndex === 0 && /* @__PURE__ */ React__default.createElement(\"th\", { rowSpan: lexicalTable.getRowCount(), \"data-tool-cell\": true }, /* @__PURE__ */ React__default.createElement(\"button\", { className: styles.addColumnButton, onClick: addColumnToRight }, /* @__PURE__ */ React__default.createElement(AddColumnIcon, null))));\n  })), /* @__PURE__ */ React__default.createElement(\"tfoot\", null, /* @__PURE__ */ React__default.createElement(\"tr\", null, /* @__PURE__ */ React__default.createElement(\"th\", null), /* @__PURE__ */ React__default.createElement(\"th\", { colSpan: lexicalTable.getColCount() }, /* @__PURE__ */ React__default.createElement(\"button\", { className: styles.addRowButton, onClick: addRowToBottom }, /* @__PURE__ */ React__default.createElement(AddRowIcon, null))), /* @__PURE__ */ React__default.createElement(\"th\", null))));\n};\nconst Cell = ({ align, ...props }) => {\n  const [activeCell, setActiveCell] = props.activeCellTuple;\n  const isActive = activeCell && activeCell[0] === props.colIndex && activeCell[1] === props.rowIndex;\n  const className = AlignToTailwindClassMap[align || \"left\"];\n  return /* @__PURE__ */ React__default.createElement(\n    \"td\",\n    {\n      className,\n      \"data-active\": isActive,\n      onClick: () => {\n        setActiveCell([props.colIndex, props.rowIndex]);\n      }\n    },\n    isActive ? /* @__PURE__ */ React__default.createElement(CellEditor, { ...props }) : /* @__PURE__ */ React__default.createElement(MarkdownAstRenderer, { mdastChildren: props.contents })\n  );\n};\nconst CellEditor = ({ activeCellTuple, parentEditor, lexicalTable, contents, colIndex, rowIndex }) => {\n  const [markdownParseOptions, lexicalConvertOptions, jsxComponentDescriptors, lexicalNodes] = useEmitterValues(\n    \"markdownParseOptions\",\n    \"lexicalConvertOptions\",\n    \"jsxComponentDescriptors\",\n    \"lexicalNodes\"\n  );\n  const [editor] = React__default.useState(() => {\n    let disposed = false;\n    const editor2 = createEditor({\n      nodes: lexicalNodes,\n      theme\n    });\n    function saveAndDispose(nextCell) {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      editor2.getEditorState().read(() => {\n        const mdast = exportLexicalTreeToMdast({\n          root: $getRoot(),\n          jsxComponentDescriptors,\n          ...lexicalConvertOptions\n        });\n        parentEditor.update(() => {\n          lexicalTable.updateCellContents(colIndex, rowIndex, mdast.children[0].children);\n        });\n      });\n      activeCellTuple[1](nextCell);\n    }\n    editor2.registerCommand(\n      KEY_TAB_COMMAND,\n      (payload) => {\n        payload.preventDefault();\n        const nextCell = payload.shiftKey ? [colIndex - 1, rowIndex] : [colIndex + 1, rowIndex];\n        saveAndDispose(nextCell);\n        return true;\n      },\n      COMMAND_PRIORITY_CRITICAL\n    );\n    editor2.registerCommand(\n      KEY_ENTER_COMMAND,\n      (payload) => {\n        payload == null ? void 0 : payload.preventDefault();\n        const nextCell = (payload == null ? void 0 : payload.shiftKey) ? [colIndex, rowIndex - 1] : [colIndex, rowIndex + 1];\n        saveAndDispose(nextCell);\n        return true;\n      },\n      COMMAND_PRIORITY_CRITICAL\n    );\n    editor2.registerCommand(\n      BLUR_COMMAND,\n      (payload) => {\n        const relatedTarget = payload.relatedTarget;\n        if ((relatedTarget == null ? void 0 : relatedTarget.dataset[\"editorDialog\"]) !== void 0 || (relatedTarget == null ? void 0 : relatedTarget.dataset[\"toolbarItem\"]) !== void 0) {\n          return false;\n        }\n        saveAndDispose(null);\n        return true;\n      },\n      COMMAND_PRIORITY_CRITICAL\n    );\n    editor2.registerRootListener((element) => {\n      if (element) {\n        editor2.focus();\n      }\n    });\n    editor2.update(() => {\n      importMdastTreeToLexical({\n        root: $getRoot(),\n        mdastRoot: { type: \"root\", children: [{ type: \"paragraph\", children: contents }] },\n        visitors: markdownParseOptions.visitors\n      });\n    });\n    return editor2;\n  });\n  return /* @__PURE__ */ React__default.createElement(LexicalNestedComposer, { initialEditor: editor }, /* @__PURE__ */ React__default.createElement(RichTextPlugin, { contentEditable: /* @__PURE__ */ React__default.createElement(ContentEditable, { autoFocus: true }), placeholder: /* @__PURE__ */ React__default.createElement(\"div\", null), ErrorBoundary: LexicalErrorBoundary }), /* @__PURE__ */ React__default.createElement(SharedHistoryPlugin, null));\n};\nconst ColumnEditor = ({\n  parentEditor,\n  highlightedCoordinates,\n  align,\n  lexicalTable,\n  colIndex,\n  setActiveCellWithBoundaries\n}) => {\n  const [editorRootElementRef] = useEmitterValues(\"editorRootElementRef\");\n  const insertColumnAt = React__default.useCallback(\n    (colIndex2) => {\n      parentEditor.update(() => {\n        lexicalTable.insertColumnAt(colIndex2);\n      });\n      setActiveCellWithBoundaries([colIndex2, 0]);\n    },\n    [parentEditor, lexicalTable, setActiveCellWithBoundaries]\n  );\n  const deleteColumnAt = React__default.useCallback(\n    (colIndex2) => {\n      parentEditor.update(() => {\n        lexicalTable.deleteColumnAt(colIndex2);\n      });\n    },\n    [parentEditor, lexicalTable]\n  );\n  const setColumnAlign = React__default.useCallback(\n    (colIndex2, align2) => {\n      parentEditor.update(() => {\n        lexicalTable.setColumnAlign(colIndex2, align2);\n      });\n    },\n    [parentEditor, lexicalTable]\n  );\n  return /* @__PURE__ */ React__default.createElement(RadixPopover.Root, null, /* @__PURE__ */ React__default.createElement(\n    RadixPopover.PopoverTrigger,\n    {\n      className: styles.tableColumnEditorTrigger,\n      \"data-active\": highlightedCoordinates[0] === colIndex + 1,\n      title: \"Column menu\"\n    },\n    /* @__PURE__ */ React__default.createElement(MoreHorizIcon, null)\n  ), /* @__PURE__ */ React__default.createElement(RadixPopover.Portal, { container: editorRootElementRef == null ? void 0 : editorRootElementRef.current }, /* @__PURE__ */ React__default.createElement(\n    RadixPopover.PopoverContent,\n    {\n      className: classNames(styles.tableColumnEditorPopoverContent),\n      onOpenAutoFocus: (e) => e.preventDefault(),\n      sideOffset: 5,\n      side: \"top\"\n    },\n    /* @__PURE__ */ React__default.createElement(RadixToolbar.Root, { className: styles.tableColumnEditorToolbar }, /* @__PURE__ */ React__default.createElement(\n      RadixToolbar.ToggleGroup,\n      {\n        className: styles.toggleGroupRoot,\n        onValueChange: (value) => {\n          setColumnAlign(colIndex, value);\n        },\n        value: align || \"left\",\n        type: \"single\",\n        \"aria-label\": \"Text alignment\"\n      },\n      /* @__PURE__ */ React__default.createElement(RadixToolbar.ToggleItem, { value: \"left\", title: \"Align left\" }, /* @__PURE__ */ React__default.createElement(AlignLeftIcon, null)),\n      /* @__PURE__ */ React__default.createElement(RadixToolbar.ToggleItem, { value: \"center\", title: \"Align center\" }, /* @__PURE__ */ React__default.createElement(AlignCenterIcon, null)),\n      /* @__PURE__ */ React__default.createElement(RadixToolbar.ToggleItem, { value: \"right\", title: \"Align right\" }, /* @__PURE__ */ React__default.createElement(AlignRightIcon, null))\n    ), /* @__PURE__ */ React__default.createElement(RadixToolbar.Separator, null), /* @__PURE__ */ React__default.createElement(RadixToolbar.Button, { onClick: insertColumnAt.bind(null, colIndex), title: \"Insert a column to the left of this one\" }, /* @__PURE__ */ React__default.createElement(InsertColLeftIcon, null)), /* @__PURE__ */ React__default.createElement(RadixToolbar.Button, { onClick: insertColumnAt.bind(null, colIndex + 1), title: \"Insert a column to the right of this one\" }, /* @__PURE__ */ React__default.createElement(InsertColRightIcon, null)), /* @__PURE__ */ React__default.createElement(RadixToolbar.Button, { onClick: deleteColumnAt.bind(null, colIndex), title: \"Delete this column\" }, /* @__PURE__ */ React__default.createElement(DeleteSmallIcon, null)))\n  )));\n};\nconst RowEditor = ({\n  parentEditor,\n  highlightedCoordinates,\n  lexicalTable,\n  rowIndex,\n  setActiveCellWithBoundaries\n}) => {\n  const [editorRootElementRef] = useEmitterValues(\"editorRootElementRef\");\n  const insertRowAt = React__default.useCallback(\n    (rowIndex2) => {\n      parentEditor.update(() => {\n        lexicalTable.insertRowAt(rowIndex2);\n      });\n      setActiveCellWithBoundaries([0, rowIndex2]);\n    },\n    [parentEditor, lexicalTable, setActiveCellWithBoundaries]\n  );\n  const deleteRowAt = React__default.useCallback(\n    (rowIndex2) => {\n      parentEditor.update(() => {\n        lexicalTable.deleteRowAt(rowIndex2);\n      });\n    },\n    [parentEditor, lexicalTable]\n  );\n  return /* @__PURE__ */ React__default.createElement(RadixPopover.Root, null, /* @__PURE__ */ React__default.createElement(RadixPopover.PopoverTrigger, { className: styles.tableColumnEditorTrigger, \"data-active\": highlightedCoordinates[1] === rowIndex }, /* @__PURE__ */ React__default.createElement(MoreHorizIcon, null)), /* @__PURE__ */ React__default.createElement(RadixPopover.Portal, { container: editorRootElementRef == null ? void 0 : editorRootElementRef.current }, /* @__PURE__ */ React__default.createElement(\n    RadixPopover.PopoverContent,\n    {\n      className: classNames(styles.tableColumnEditorPopoverContent),\n      onOpenAutoFocus: (e) => e.preventDefault(),\n      sideOffset: 5,\n      side: \"bottom\"\n    },\n    /* @__PURE__ */ React__default.createElement(RadixToolbar.Root, { className: styles.tableColumnEditorToolbar }, /* @__PURE__ */ React__default.createElement(RadixToolbar.Button, { onClick: insertRowAt.bind(null, rowIndex), title: \"Insert a row above this one\" }, /* @__PURE__ */ React__default.createElement(InsertRowAboveIcon, null)), /* @__PURE__ */ React__default.createElement(RadixToolbar.Button, { onClick: insertRowAt.bind(null, rowIndex + 1), title: \"Insert a row below this one\" }, /* @__PURE__ */ React__default.createElement(InsertRowBelowIcon, null)), /* @__PURE__ */ React__default.createElement(RadixToolbar.Button, { onClick: deleteRowAt.bind(null, rowIndex), title: \"Delete this row\" }, /* @__PURE__ */ React__default.createElement(DeleteSmallIcon, null)))\n  )));\n};\nexport {\n  TableEditor\n};\n"],"names":["LexicalCollaborationContext","require","module","exports","b","c","d","Math","floor","random","length","e","createContext","clientID","color","isCollabActive","name","yjsDocMap","Map","CollaborationContext","useCollaborationContext","f","g","a","useContext","LexicalNestedComposer","_createForOfIteratorHelper","_slicedToArray","h","p","_ref","initialEditor","children","initialNodes","r","initialTheme","t","skipCollabChecks","n","useRef","k","LexicalComposerContext","URLSearchParams","append","arguments","Error","concat","q","_k","u","getTheme","x","useMemo","v","createLexicalComposerContext","_config","theme","_parentEditor","_step","_iterator","s","done","value","getType","_nodes","set","klass","replace","replaceWithKlass","transforms","Set","err","_step2","_iterator2","_step2$value","w","l","namespace","_editable","_c$useCollaborationCo","y","z","m","current","has","getKey","useEffect","registerEditableListener","setEditable","createElement","Provider","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","enumerable","configurable","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","i","deep","normalizeUri","result","index","start","skip","code","charCodeAt","asciiAlphanumeric","test","String","fromCharCode","next","push","slice","encodeURIComponent","join","pointStart","point","pointEnd","type","node","position","line","column","offset","own","clean","toUpperCase","footnoteReference","state","counter","id","identifier","safeId","toLowerCase","footnoteOrder","indexOf","footnoteCounts","reuseCounter","link","tagName","properties","href","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","referenceType","suffix","label","alt","contents","all","head","unshift","tail","listItemLoose","spread","undefined","tab","space","trimLines","source","search","match","exec","last","lines","trimLine","end","startIndex","endIndex","codePointAt","handlers","blockquote","wrap","break","lang","className","meta","data","delete","emphasis","footnote","footnoteById","no","heading","depth","html","dangerous","imageReference","def","definition","url","title","image","inlineCode","text","linkReference","listItem","parent","results","loose","listLoose","checked","paragraph","disabled","child","apply","_toConsumableArray","list","includes","ordered","root","strong","table","rows","firstRow","shift","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","thematicBreak","toml","ignore","yaml","footnoteDefinition","createState","tree","settings","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","_objectSpread","cache","create","visit","definitions","one","augment","left","right","hName","hProperties","hChildren","ctx","props","from","to","defaultUnknownHandler","values","nodes","toHast","foot","listItems","content","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","_tail$children","tailTail","dataFootnotes","JSON","parse","stringify","footer","Schema","_createClass","property","normal","_classCallCheck","this","merge","assign","normalize","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","pow","checks","keys","types","DefinedInfo","_Info","_inherits","_super","_createSuper","mask","_this","mark","_assertThisInitialized","check","prop","info","transform","attributes","xlink","_","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","language","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","style","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","htmlBase","svgBase","valid","dash","cap","find","schema","Type","charAt","rest","camelcase","dashes","kebab","$0","input","trim","split","tokens","token","padRight","padLeft","buttonTypes","core","defaultTagName","caseSensitive","adjust","createAdjustMap","selector","_len","_key","previous","lastIndex","subvalue","parseSelector","isProperties","addProperty","addChild","Number","isNaN","spaces","commas","parsePrimitive","finalResult","webNamespaces","mathml","proto","nodeName","reference","quirksMode","childNodes","file","location","doc","loc","indices","toPoint","toOffset","namespaceURI","attrs","fn","pos","sourceCodeLocation","startTag","endTag","element","verbose","opening","closing","createLocation","startLine","startCol","endLine","endCol","endOffset","zwitch","parentSchema","currentSchema","createProperty","parentNode","fragment","comment","doctype","publicId","systemId","CODE_POINTS","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","ERR","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","TokenType","Preprocessor","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","get","col","onParseError","getError","nextCp","isSurrogatePair","_addGap","$","EOF","_err","surrogateInInputStream","willDropParsedChunk","substring","chunk","isLastChunk","startsWith","CARRIAGE_RETURN","LINE_FEED","advance","_processSurrogate","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","count","pop","getTokenAttr","attrName","CharCodes","Uint16Array","map","decodeMap","fromCodePoint","_a","codePoint","output","replaceCodePoint","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isEntityInAttributeInvalidEnd","EQUALS","UPPER_Z","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","str","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","base","digitCount","parseInt","substr","startIdx","addToNumericResult","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","valueLength","VALUE_LENGTH","determineBranch","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","startEntity","len","write","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecodeTree","xmlDecodeTree","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","_SPECIAL_ELEMENTS","_defineProperty","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","State","C1_CONTROLS_REFERENCE_REPLACEMENTS","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","EntryType","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","returnState","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","sourceCodeLocationInfo","_consume","_ensureHibernation","_callState","writeCallback","_runParsingLoop","insertHtmlAtCurrentPos","_unconsume","retreat","_advanceBy","START_TAG","tagID","selfClosing","ackSelfClosing","END_TAG","COMMENT","initialName","DOCTYPE","forceQuirks","chars","attrNameFirstCh","_leaveAttrValue","duplicateAttribute","ct","_emitCurrentCharacterToken","prepareToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","dropParsedChunk","onComment","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","onEof","ch","_createCharacterToken","NULL","_appendCharToCurrentCharacterToken","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","peek","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_emitCodePoint","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","_emitEOFToken","_emitChars","_createStartTagToken","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","_createCommentToken","eofBeforeTagName","invalidFirstCharacterOfTagName","_createEndTagToken","missingEndTagName","emitCurrentTagToken","eofInTag","_cp","handleSpecialEndTag","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","unexpectedEqualsSignBeforeAttributeName","_createAttr","_leaveAttrName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","emitCurrentComment","_consumeSequenceIfMatch","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","_createDoctypeToken","emitCurrentDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","_flushCodePointConsumedAsCharacterReference","_reconsumeInState","matchResult","_matchNamedCharacterReference","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","replacement","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","document","treeAdapter","items","tagIDs","stackTop","tmplCount","currentTagId","_isInTemplate","getTemplateContent","lastIndexOf","getNamespaceURI","onItemPush","popped","_updateCurrentElement","onItemPop","oldElement","newElement","idx","_indexOf","referenceElement","newElementID","insertionIdx","splice","targetIdx","shortenToLength","tagNames","targetNS","_indexOfTagNames","popUntilPopped","clearBackTo","elementIdx","ns","exclusionId","MARKER","Marker","FormattingElementList","entries","bookmark","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","entry","elementAttrs","getAttrList","_getNoahArkConditionCandidates","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","_ensureNoahArkCondition","Element","bookmarkIdx","entryIndex","markerIdx","createTextNode","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createCommentNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","some","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","InsertionMode","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","Parser","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","rootElement","_adoptNodes","beforeToken","tid","isTop","_setEndLocation","_this$openElements","isHTML","_isIntegrationPoint","nextTokenizerState","_insertElement","TEXT","IN_BODY","TN","docTypeNode","_shouldFosterParentOnInsertion","_fosterParentElement","currentTmplContentOrNode","_attachElementToTree","tmpl","beforeElement","_this$_findFosterPare","_findFosterParentingLocation","textNodeIdx","_token$location","donor","closingToken","ctLoc","endLoc","_this$openElements2","_processStartTag","foreignContent","_this2","listLength","findIndex","contains","generateImpliedEndTags","popUntilTableCellPopped","clearToLastMarker","IN_ROW","generateImpliedEndTagsWithExclusion","popUntilTagNamePopped","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_insertCharacters","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","IN_TEMPLATE","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","_appendCommentNode","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","_setDocumentType","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","shouldProcessStartTagTokenInForeignContent","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","_getAdjustedCurrentElement","currentNs","adjustedTagName","_appendElement","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","remove","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","hasInTableScope","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","_closeTableCell","startTagInCell","startTagInSelect","_resetInsertionMode","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","isRootHtmlElementCurrent","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","parser","opts","documentMock","_initTokenizerForFragmentParsing","_insertFakeRootElement","_findFormInFragmentContext","aaObtainFormattingElementEntry","formattingElementEntry","getElementEntryInScopeWithTagName","hasInScope","removeEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","_isSpecialElement","aaInnerLoop","formattingElement","lastElement","nextElement","getCommonAncestor","elementEntry","getElementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","insertElementAfterBookmark","insertAfter","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","_processToken","_insertFakeElement","_switchToTextParsing","_insertTemplate","insertMarker","generateImpliedEndTagsThoroughly","closingOfElementWithOpenChildElements","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","_reconstructActiveFormattingElements","areaStartTagInBody","isHiddenInput","inputType","TYPE","noembedStartTagInBody","genericStartTagInBody","pushElement","bStartTagInBody","activeElementEntry","aStartTagInBody","hasInButtonScope","_closePElement","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","tryPeekProperlyNestedBodyElement","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","popAllUpToHtmlElement","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","hasInListItemScope","liEndTagInBody","ddEndTagInBody","hasNumberedHeaderInScope","popUntilNumberedHeaderPopped","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","clearBackToTableContext","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","clearBackToTableBodyContext","hasTableBodyContextInTableScope","clearBackToTableRowContext","hasInSelectScope","xmlCodeMap","getEscaper","regex","lastIdx","knownMdxNames","parseOptions","raw","Boolean","documentMode","handleRaw","unknown","getFragmentParser","handle","stitches","resetTokenizer","options_","fromParse5","getFragment","stitch","toParse5","tag","Token","createParse5Location","cloneWithoutChildren","fakeRoot","setPoint","node_","extra","defaultSchema","strip","clobber","ancestors","tbody","tfoot","thead","td","th","tr","protocols","img","li","div","del","ins","nodeSchema","allowDoctypes","handleDoctypeName","allowComments","handleCommentValue","handleTagName","stack","reqs","allowed","toPropertyValueMap","handlePropertyValues","handlePropertyValue","colon","questionMark","numberSign","slash","safeProtocol","whitespace","thing","siblingAfter","siblingBefore","includeWhitespace","omission","headOrColgroupOrCaption","dt","dd","rt","rubyElement","rp","optgroup","option","menuitem","colgroup","caption","seen","constants","unquoted","single","double","serializeAttribute","allowParseErrors","allowDangerousCharacters","quote","stringifyEntities","characterReferences","subset","tightCommaSeparatedLists","collapseEmptyAttributes","preferUnquoted","quoteSmart","ccount","alternative","invalid","_1","_2","bogusComments","_3","upperDoctype","tightDoctype","omit","omitOptionalTags","closeEmptyElements","voids","parts","tightAttributes","serializeAttributes","closeSelfClosing","tightSelfClosing","MarkdownAstRenderer","entities","toHtml","sanitize","mdastChildren","React__default","dangerouslySetInnerHTML","__html","MoreHorizIcon","React","maskType","AlignLeftIcon","AlignCenterIcon","AlignRightIcon","InsertColLeftIcon","InsertColRightIcon","DeleteSmallIcon","InsertRowAboveIcon","InsertRowBelowIcon","AddRowIcon","AddColumnIcon","AlignToTailwindClassMap","center","styles","centeredCell","leftAlignedCell","rightAlignedCell","TableEditor","mdastNode","parentEditor","lexicalTable","_React__default$useSt","_React__default$useSt2","activeCell","setActiveCell","setActiveCellWithBoundaries","colCount","getColCount","_cell","colIndex","rowIndex","getRowCount","update","getLatest","getNextSibling","selectNext","newParagraph","$createParagraphNode","select","selectPrevious","focusEmitter","subscribe","addRowToBottom","addColumnToRight","_React__default$useSt3","_React__default$useSt4","highlightedCoordinates","setHighlightedCoordinates","onTableMouseOver","currentTarget","parentElement","tableEditor","currentColumnAlign","tableToolsColumn","iconButton","ColumnEditor","row","toolCell","RowEditor","mdastCell","Cell","activeCellTuple","addColumnButton","addRowButton","_ref2","_objectWithoutProperties","_excluded","_props$activeCellTupl","isActive","CellEditor","_ref3","_useEmitterValues","useEmitterValues","_useEmitterValues2","markdownParseOptions","lexicalConvertOptions","jsxComponentDescriptors","lexicalNodes","_React__default$useSt5","disposed","editor2","createEditor","saveAndDispose","nextCell","getEditorState","read","mdast","exportLexicalTreeToMdast","$getRoot","updateCellContents","registerCommand","KEY_TAB_COMMAND","payload","preventDefault","shiftKey","COMMAND_PRIORITY_CRITICAL","KEY_ENTER_COMMAND","BLUR_COMMAND","relatedTarget","dataset","registerRootListener","focus","importMdastTreeToLexical","mdastRoot","visitors","editor","RichTextPlugin","ContentEditable","ErrorBoundary","LexicalErrorBoundary","SharedHistoryPlugin","_ref4","_useEmitterValues3","editorRootElementRef","insertColumnAt","colIndex2","deleteColumnAt","setColumnAlign","align2","RadixPopover","tableColumnEditorTrigger","container","classNames","tableColumnEditorPopoverContent","onOpenAutoFocus","sideOffset","RadixToolbar","tableColumnEditorToolbar","toggleGroupRoot","onValueChange","bind","_ref5","_useEmitterValues5","insertRowAt","rowIndex2","deleteRowAt"],"sourceRoot":""}