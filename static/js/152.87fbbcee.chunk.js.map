{"version":3,"file":"static/js/152.87fbbcee.chunk.js","mappings":"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","sources":["../node_modules/@mdxeditor/editor/dist/SandpackEditor-6510347a.js","../node_modules/@mdxeditor/editor/dist/useCodeMirrorRef-a3ac5f25.js"],"sourcesContent":["import { SandpackProvider, SandpackLayout, SandpackCodeEditor, SandpackPreview, useSandpack } from \"@codesandbox/sandpack-react\";\nimport { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\nimport React__default from \"react\";\nimport { u as useEmitterValues, a as usePublisher } from \"./index-2fb34a7e.js\";\nimport { u as useCodeMirrorRef } from \"./useCodeMirrorRef-a3ac5f25.js\";\nimport \"@lexical/react/LexicalComposer\";\nimport \"@lexical/react/LexicalContentEditable\";\nimport \"@lexical/react/LexicalErrorBoundary\";\nimport \"@lexical/react/LexicalHorizontalRulePlugin\";\nimport \"@lexical/react/LexicalLinkPlugin\";\nimport \"@lexical/react/LexicalListPlugin\";\nimport \"@lexical/react/LexicalRichTextPlugin\";\nimport \"@lexical/react/LexicalTabIndentationPlugin\";\nimport \"classnames\";\nimport \"lexical\";\nimport \"@lexical/code\";\nimport \"@lexical/link\";\nimport \"@lexical/list\";\nimport \"@lexical/react/LexicalHorizontalRuleNode\";\nimport \"@lexical/rich-text\";\nimport \"mdast-util-directive\";\nimport \"mdast-util-from-markdown\";\nimport \"mdast-util-frontmatter\";\nimport \"mdast-util-gfm-table\";\nimport \"mdast-util-mdx\";\nimport \"micromark-extension-directive\";\nimport \"micromark-extension-frontmatter\";\nimport \"micromark-extension-gfm-table\";\nimport \"micromark-extension-mdxjs\";\nimport \"@lexical/utils\";\nimport \"@lexical/selection\";\nimport \"@lexical/react/LexicalHistoryPlugin\";\nimport \"mdast-util-to-markdown\";\nimport \"@radix-ui/react-popover\";\nimport \"@radix-ui/react-tooltip\";\nimport \"downshift\";\nimport \"@lexical/markdown\";\nimport \"@lexical/react/LexicalMarkdownShortcutPlugin\";\nimport \"react-diff-view\";\nimport \"unidiff\";\nimport \"@radix-ui/react-toolbar\";\nimport \"@radix-ui/react-select\";\nimport \"@radix-ui/react-dialog\";\nconst CodeUpdateEmitter = ({ onChange, snippetFileName }) => {\n  const { sandpack } = useSandpack();\n  onChange(sandpack.files[snippetFileName].code);\n  return null;\n};\nfunction getPresetOrDefault(meta, config) {\n  return config.presets.find((preset) => preset.meta === meta) || config.presets.find((preset) => preset.name === config.defaultPreset);\n}\nconst SandpackEditor = ({ nodeKey, code, meta, onChange, focusEmitter }) => {\n  const [editor] = useLexicalComposerContext();\n  const [config] = useEmitterValues(\"sandpackConfig\");\n  const codeMirrorRef = useCodeMirrorRef(nodeKey, \"sandpack\", \"jsx\");\n  const setActiveEditorType = usePublisher(\"activeEditorType\");\n  React__default.useEffect(() => {\n    focusEmitter.subscribe(() => {\n      var _a, _b;\n      (_b = (_a = codeMirrorRef == null ? void 0 : codeMirrorRef.current) == null ? void 0 : _a.getCodemirror()) == null ? void 0 : _b.focus();\n      setActiveEditorType({ type: \"sandpack\", nodeKey });\n    });\n  }, [focusEmitter, codeMirrorRef, setActiveEditorType, nodeKey]);\n  const wrappedOnChange = React__default.useCallback(\n    (code2) => {\n      editor.update(() => {\n        onChange(code2);\n      });\n    },\n    [onChange, editor]\n  );\n  const preset = getPresetOrDefault(meta, config);\n  if (!preset) {\n    throw new Error(`No sandpack preset found for meta: ${meta}`);\n  }\n  return /* @__PURE__ */ React__default.createElement(\n    SandpackProvider,\n    {\n      template: preset.sandpackTemplate,\n      theme: preset.sandpackTheme,\n      files: {\n        [preset.snippetFileName]: code,\n        ...Object.entries(preset.files || {}).reduce(\n          (acc, [filePath, fileContents]) => ({ ...acc, ...{ [filePath]: { code: fileContents, readOnly: true } } }),\n          {}\n        )\n      },\n      customSetup: {\n        dependencies: preset.dependencies\n      }\n    },\n    /* @__PURE__ */ React__default.createElement(SandpackLayout, null, /* @__PURE__ */ React__default.createElement(SandpackCodeEditor, { showLineNumbers: true, showInlineErrors: true, ref: codeMirrorRef }), /* @__PURE__ */ React__default.createElement(SandpackPreview, null)),\n    /* @__PURE__ */ React__default.createElement(CodeUpdateEmitter, { onChange: wrappedOnChange, snippetFileName: preset.snippetFileName })\n  );\n};\nexport {\n  SandpackEditor\n};\n","import { $getNodeByKey, $createParagraphNode } from \"lexical\";\nimport React__default from \"react\";\nimport { u as useEmitterValues, a as usePublisher } from \"./index-2fb34a7e.js\";\nfunction useCodeMirrorRef(nodeKey, editorType, language) {\n  const [activeEditor] = useEmitterValues(\"activeEditor\");\n  const setActiveEditorType = usePublisher(\"activeEditorType\");\n  const codeMirrorRef = React__default.useRef(null);\n  const atBottom = React__default.useRef(false);\n  const atTop = React__default.useRef(false);\n  const onFocusHandler = React__default.useCallback(() => {\n    setActiveEditorType({ type: editorType, nodeKey });\n  }, [nodeKey, setActiveEditorType, editorType]);\n  const onKeyDownHandler = React__default.useCallback(\n    (e) => {\n      var _a, _b, _c, _d;\n      if (e.key === \"ArrowDown\") {\n        const state = (_b = (_a = codeMirrorRef == null ? void 0 : codeMirrorRef.current) == null ? void 0 : _a.getCodemirror()) == null ? void 0 : _b.state;\n        if (state) {\n          const docLength = state.doc.length;\n          const selectionEnd = state.selection.ranges[0].to;\n          if (docLength === selectionEnd) {\n            if (!atBottom.current) {\n              atBottom.current = true;\n            } else {\n              activeEditor == null ? void 0 : activeEditor.update(() => {\n                var _a2, _b2;\n                const node = $getNodeByKey(nodeKey);\n                const nextSibling = node.getNextSibling();\n                if (nextSibling) {\n                  (_b2 = (_a2 = codeMirrorRef == null ? void 0 : codeMirrorRef.current) == null ? void 0 : _a2.getCodemirror()) == null ? void 0 : _b2.contentDOM.blur();\n                  node.selectNext();\n                } else {\n                  node.insertAfter($createParagraphNode());\n                }\n              });\n              atBottom.current = false;\n            }\n          }\n        }\n      } else if (e.key === \"ArrowUp\") {\n        const state = (_d = (_c = codeMirrorRef == null ? void 0 : codeMirrorRef.current) == null ? void 0 : _c.getCodemirror()) == null ? void 0 : _d.state;\n        if (state) {\n          const selectionStart = state.selection.ranges[0].from;\n          if (selectionStart === 0) {\n            if (!atTop.current) {\n              atTop.current = true;\n            } else {\n              activeEditor == null ? void 0 : activeEditor.update(() => {\n                var _a2, _b2;\n                const node = $getNodeByKey(nodeKey);\n                const previousSibling = node.getPreviousSibling();\n                if (previousSibling) {\n                  (_b2 = (_a2 = codeMirrorRef == null ? void 0 : codeMirrorRef.current) == null ? void 0 : _a2.getCodemirror()) == null ? void 0 : _b2.contentDOM.blur();\n                  node.selectPrevious();\n                }\n              });\n              atTop.current = false;\n            }\n          }\n        }\n      } else if (e.key === \"Enter\") {\n        e.stopPropagation();\n      }\n    },\n    [activeEditor, nodeKey]\n  );\n  React__default.useEffect(() => {\n    const codeMirror = codeMirrorRef.current;\n    setTimeout(() => {\n      var _a, _b, _c, _d;\n      (_b = (_a = codeMirror == null ? void 0 : codeMirror.getCodemirror()) == null ? void 0 : _a.contentDOM) == null ? void 0 : _b.addEventListener(\"focus\", onFocusHandler);\n      (_d = (_c = codeMirror == null ? void 0 : codeMirror.getCodemirror()) == null ? void 0 : _c.contentDOM) == null ? void 0 : _d.addEventListener(\"keydown\", onKeyDownHandler);\n    }, 100);\n    return () => {\n      var _a, _b;\n      (_a = codeMirror == null ? void 0 : codeMirror.getCodemirror()) == null ? void 0 : _a.contentDOM.removeEventListener(\"focus\", onFocusHandler);\n      (_b = codeMirror == null ? void 0 : codeMirror.getCodemirror()) == null ? void 0 : _b.contentDOM.removeEventListener(\"keydown\", onKeyDownHandler);\n    };\n  }, [codeMirrorRef, onFocusHandler, onKeyDownHandler, language]);\n  return codeMirrorRef;\n}\nexport {\n  useCodeMirrorRef as u\n};\n"],"names":["CodeUpdateEmitter","_ref","onChange","snippetFileName","useSandpack","sandpack","files","code","SandpackEditor","_ref2","nodeKey","meta","focusEmitter","_useLexicalComposerCo","useLexicalComposerContext","editor","_slicedToArray","_useEmitterValues","useEmitterValues","config","codeMirrorRef","useCodeMirrorRef","setActiveEditorType","usePublisher","React__default","subscribe","_a","_b","current","getCodemirror","focus","type","wrappedOnChange","code2","update","preset","presets","find","name","defaultPreset","getPresetOrDefault","Error","concat","SandpackProvider","template","sandpackTemplate","theme","sandpackTheme","_objectSpread","_defineProperty","Object","entries","reduce","acc","_ref3","_ref4","filePath","fileContents","readOnly","customSetup","dependencies","SandpackLayout","SandpackCodeEditor","showLineNumbers","showInlineErrors","ref","SandpackPreview","editorType","language","activeEditor","atBottom","atTop","onFocusHandler","onKeyDownHandler","e","_c","_d","key","state","doc","length","selection","ranges","to","_a2","_b2","node","$getNodeByKey","getNextSibling","contentDOM","blur","selectNext","insertAfter","$createParagraphNode","from","getPreviousSibling","selectPrevious","stopPropagation","codeMirror","setTimeout","addEventListener","removeEventListener"],"sourceRoot":""}